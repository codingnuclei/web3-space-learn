/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Chatter, ChatterInterface } from '../Chatter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_message',
        type: 'string'
      },
      {
        internalType: 'address',
        name: '_sptAddr',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_deployersAddr',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'SPT',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_meesage',
        type: 'string'
      }
    ],
    name: 'addMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'allMessages',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address'
          },
          {
            internalType: 'string',
            name: 'message',
            type: 'string'
          }
        ],
        internalType: 'struct ChatMessage[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'latestMessage',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address'
          },
          {
            internalType: 'string',
            name: 'message',
            type: 'string'
          }
        ],
        internalType: 'struct ChatMessage',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b50604051620016c1380380620016c18339818101604052810190620000379190620004ec565b620000836040518060400160405280600881526020017f5f73707441646472000000000000000000000000000000000000000000000000815250836200023e60201b620005bd1760201c565b620000cf6040518060400160405280600e81526020017f5f6465706c6f7965727341646472000000000000000000000000000000000000815250826200023e60201b620005bd1760201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000177604051806060016040528060218152602001620016a06021913984620002e460201b620006591760201c565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019062000232929190620003b3565b505050505050620007f6565b620002e0828260405160240162000257929190620005ad565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200038a60201b60201c565b5050565b620003868282604051602401620002fd929190620005e1565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200038a60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054620003c19062000701565b90600052602060002090601f016020900481019282620003e5576000855562000431565b82601f106200040057805160ff191683800117855562000431565b8280016001018555821562000431579182015b828111156200043057825182559160200191906001019062000413565b5b50905062000440919062000444565b5090565b5b808211156200045f57600081600090555060010162000445565b5090565b60006200047a620004748462000645565b6200061c565b9050828152602081018484840111156200049357600080fd5b620004a0848285620006cb565b509392505050565b600081519050620004b981620007dc565b92915050565b600082601f830112620004d157600080fd5b8151620004e384826020860162000463565b91505092915050565b6000806000606084860312156200050257600080fd5b600084015167ffffffffffffffff8111156200051d57600080fd5b6200052b86828701620004bf565b93505060206200053e86828701620004a8565b92505060406200055186828701620004a8565b9150509250925092565b620005668162000697565b82525050565b600062000579826200067b565b62000585818562000686565b935062000597818560208601620006cb565b620005a281620007cb565b840191505092915050565b60006040820190508181036000830152620005c981856200056c565b9050620005da60208301846200055b565b9392505050565b60006040820190508181036000830152620005fd81856200056c565b905081810360208301526200061381846200056c565b90509392505050565b6000620006286200063b565b905062000636828262000737565b919050565b6000604051905090565b600067ffffffffffffffff8211156200066357620006626200079c565b5b6200066e82620007cb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620006a482620006ab565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620006eb578082015181840152602081019050620006ce565b83811115620006fb576000848401525b50505050565b600060028204905060018216806200071a57607f821691505b602082108114156200073157620007306200076d565b5b50919050565b6200074282620007cb565b810181811067ffffffffffffffff821117156200076457620007636200079c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620007e78162000697565b8114620007f357600080fd5b50565b60805160601c610e846200081c600039600081816103ca015261059b0152610e846000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806310a7fef91461005157806334a077981461006f5780636a226a491461008d578063affa8d81146100a9575b600080fd5b6100596100c7565b6040516100669190610ac0565b60405180910390f35b61007761020e565b6040516100849190610b64565b60405180910390f35b6100a760048036038101906100a29190610897565b610367565b005b6100b1610599565b6040516100be9190610ae2565b60405180910390f35b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561020557838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461017490610d36565b80601f01602080910402602001604051908101604052809291908181526020018280546101a090610d36565b80156101ed5780601f106101c2576101008083540402835291602001916101ed565b820191906000526020600020905b8154815290600101906020018083116101d057829003601f168201915b505050505081525050815260200190600101906100eb565b50505050905090565b61021661071e565b6000600160008054905061022a9190610c42565b81548110610261577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546102e090610d36565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610d36565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b505050505081525050905090565b6103c86040518060400160405280601481526020017f6465706c6f7965727341646472202d2027257327000000000000000000000000815250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105bd565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016040518463ffffffff1660e01b815260040161044893929190610a89565b602060405180830381600087803b15801561046257600080fd5b505af1158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a919061086e565b506104da6040518060400160405280601f81526020017f416464696e67206e6577206368617465206d657373616765202d20272573270081525082610659565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061059392919061074e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61065582826040516024016105d3929190610afd565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106f5565b5050565b6106f1828260405160240161066f929190610b2d565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106f5565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b82805461075a90610d36565b90600052602060002090601f01602090048101928261077c57600085556107c3565b82601f1061079557805160ff19168380011785556107c3565b828001600101855582156107c3579182015b828111156107c25782518255916020019190600101906107a7565b5b5090506107d091906107d4565b5090565b5b808211156107ed5760008160009055506001016107d5565b5090565b60006108046107ff84610bab565b610b86565b90508281526020810184848401111561081c57600080fd5b610827848285610cf4565b509392505050565b60008151905061083e81610e37565b92915050565b600082601f83011261085557600080fd5b81356108658482602086016107f1565b91505092915050565b60006020828403121561088057600080fd5b600061088e8482850161082f565b91505092915050565b6000602082840312156108a957600080fd5b600082013567ffffffffffffffff8111156108c357600080fd5b6108cf84828501610844565b91505092915050565b60006108e48383610a0f565b905092915050565b6108f581610c76565b82525050565b61090481610c76565b82525050565b600061091582610bec565b61091f8185610c0f565b93508360208202850161093185610bdc565b8060005b8581101561096d578484038952815161094e85826108d8565b945061095983610c02565b925060208a01995050600181019050610935565b50829750879550505050505092915050565b61098881610cbe565b82525050565b61099781610ce2565b82525050565b60006109a882610bf7565b6109b28185610c20565b93506109c2818560208601610d03565b6109cb81610e26565b840191505092915050565b60006109e182610bf7565b6109eb8185610c31565b93506109fb818560208601610d03565b610a0481610e26565b840191505092915050565b6000604083016000830151610a2760008601826108ec565b5060208301518482036020860152610a3f828261099d565b9150508091505092915050565b6000604083016000830151610a6460008601826108ec565b5060208301518482036020860152610a7c828261099d565b9150508091505092915050565b6000606082019050610a9e60008301866108fb565b610aab60208301856108fb565b610ab8604083018461098e565b949350505050565b60006020820190508181036000830152610ada818461090a565b905092915050565b6000602082019050610af7600083018461097f565b92915050565b60006040820190508181036000830152610b1781856109d6565b9050610b2660208301846108fb565b9392505050565b60006040820190508181036000830152610b4781856109d6565b90508181036020830152610b5b81846109d6565b90509392505050565b60006020820190508181036000830152610b7e8184610a4c565b905092915050565b6000610b90610ba1565b9050610b9c8282610d68565b919050565b6000604051905090565b600067ffffffffffffffff821115610bc657610bc5610df7565b5b610bcf82610e26565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610c4d82610cb4565b9150610c5883610cb4565b925082821015610c6b57610c6a610d99565b5b828203905092915050565b6000610c8182610c94565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610cc982610cd0565b9050919050565b6000610cdb82610c94565b9050919050565b6000610ced82610cb4565b9050919050565b82818337600083830152505050565b60005b83811015610d21578082015181840152602081019050610d06565b83811115610d30576000848401525b50505050565b60006002820490506001821680610d4e57607f821691505b60208210811415610d6257610d61610dc8565b5b50919050565b610d7182610e26565b810181811067ffffffffffffffff82111715610d9057610d8f610df7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610e4081610c88565b8114610e4b57600080fd5b5056fea2646970667358221220a79ff3ee15b7625b90788864ba16b60a5169f3930eba792cba71390ef925ad2b64736f6c634300080400334465706c6f79696e67206120436861747465722077697468206d6573736167653a';

export class Chatter__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _message: string,
    _sptAddr: string,
    _deployersAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chatter> {
    return super.deploy(_message, _sptAddr, _deployersAddr, overrides || {}) as Promise<Chatter>;
  }
  getDeployTransaction(
    _message: string,
    _sptAddr: string,
    _deployersAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_message, _sptAddr, _deployersAddr, overrides || {});
  }
  attach(address: string): Chatter {
    return super.attach(address) as Chatter;
  }
  connect(signer: Signer): Chatter__factory {
    return super.connect(signer) as Chatter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatterInterface {
    return new utils.Interface(_abi) as ChatterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Chatter {
    return new Contract(address, _abi, signerOrProvider) as Chatter;
  }
}
