/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { IChatter, IChatterInterface } from '../IChatter';

const _abi = [
  {
    inputs: [],
    name: 'addMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'allMessages',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address'
          },
          {
            internalType: 'string',
            name: 'message',
            type: 'string'
          }
        ],
        internalType: 'struct ChatMessage[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'latestMessage',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address'
          },
          {
            internalType: 'string',
            name: 'message',
            type: 'string'
          }
        ],
        internalType: 'struct ChatMessage',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
];

export class IChatter__factory {
  static readonly abi = _abi;
  static createInterface(): IChatterInterface {
    return new utils.Interface(_abi) as IChatterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IChatter {
    return new Contract(address, _abi, signerOrProvider) as IChatter;
  }
}
