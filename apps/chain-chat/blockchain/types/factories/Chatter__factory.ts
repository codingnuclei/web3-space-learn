/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Chatter, ChatterInterface } from "../Chatter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "address",
        name: "_sptAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_deployersAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "SPT",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_meesage",
        type: "string",
      },
    ],
    name: "addMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allMessages",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
        ],
        internalType: "struct ChatMessage[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestMessage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
        ],
        internalType: "struct ChatMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620015f1380380620015f18339818101604052810190620000379190620003ae565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000df604051806060016040528060218152602001620015d06021913984620001a660201b620006381760201c565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906200019a92919062000275565b50505050505062000673565b620002488282604051602401620001bf9291906200045e565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200024c60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805462000283906200057e565b90600052602060002090601f016020900481019282620002a75760008555620002f3565b82601f10620002c257805160ff1916838001178555620002f3565b82800160010185558215620002f3579182015b82811115620002f2578251825591602001919060010190620002d5565b5b50905062000302919062000306565b5090565b5b808211156200032157600081600090555060010162000307565b5090565b60006200033c6200033684620004c2565b62000499565b9050828152602081018484840111156200035557600080fd5b6200036284828562000548565b509392505050565b6000815190506200037b8162000659565b92915050565b600082601f8301126200039357600080fd5b8151620003a584826020860162000325565b91505092915050565b600080600060608486031215620003c457600080fd5b600084015167ffffffffffffffff811115620003df57600080fd5b620003ed8682870162000381565b935050602062000400868287016200036a565b925050604062000413868287016200036a565b9150509250925092565b60006200042a82620004f8565b62000436818562000503565b93506200044881856020860162000548565b620004538162000648565b840191505092915050565b600060408201905081810360008301526200047a81856200041d565b905081810360208301526200049081846200041d565b90509392505050565b6000620004a5620004b8565b9050620004b38282620005b4565b919050565b6000604051905090565b600067ffffffffffffffff821115620004e057620004df62000619565b5b620004eb8262000648565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620005218262000528565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620005685780820151818401526020810190506200054b565b8381111562000578576000848401525b50505050565b600060028204905060018216806200059757607f821691505b60208210811415620005ae57620005ad620005ea565b5b50919050565b620005bf8262000648565b810181811067ffffffffffffffff82111715620005e157620005e062000619565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006648162000514565b81146200067057600080fd5b50565b60805160601c610f30620006a0600039600081816103720152818161045b01526106160152610f306000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806310a7fef91461005157806334a077981461006f5780636a226a491461008d578063affa8d81146100a9575b600080fd5b6100596100c7565b6040516100669190610b1b565b60405180910390f35b61007761020e565b6040516100849190610baf565b60405180910390f35b6100a760048036038101906100a2919061088b565b610367565b005b6100b1610614565b6040516100be9190610b3d565b60405180910390f35b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561020557838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461017490610d81565b80601f01602080910402602001604051908101604052809291908181526020018280546101a090610d81565b80156101ed5780601f106101c2576101008083540402835291602001916101ed565b820191906000526020600020905b8154815290600101906020018083116101d057829003601f168201915b505050505081525050815260200190600101906100eb565b50505050905090565b6102166106fd565b6000600160008054905061022a9190610c8d565b81548110610261577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546102e090610d81565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610d81565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b505050505081525050905090565b670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103c99190610ac9565b60206040518083038186803b1580156103e157600080fd5b505afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041991906108cc565b11610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610b8f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006040518463ffffffff1660e01b81526004016104e093929190610ae4565b602060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190610862565b50610555604051806060016040528060218152602001610eda6021913982610638565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061060e92919061072d565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106d0828260405160240161064e929190610b58565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d4565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b82805461073990610d81565b90600052602060002090601f01602090048101928261075b57600085556107a2565b82601f1061077457805160ff19168380011785556107a2565b828001600101855582156107a2579182015b828111156107a1578251825591602001919060010190610786565b5b5090506107af91906107b3565b5090565b5b808211156107cc5760008160009055506001016107b4565b5090565b60006107e36107de84610bf6565b610bd1565b9050828152602081018484840111156107fb57600080fd5b610806848285610d3f565b509392505050565b60008151905061081d81610eab565b92915050565b600082601f83011261083457600080fd5b81356108448482602086016107d0565b91505092915050565b60008151905061085c81610ec2565b92915050565b60006020828403121561087457600080fd5b60006108828482850161080e565b91505092915050565b60006020828403121561089d57600080fd5b600082013567ffffffffffffffff8111156108b757600080fd5b6108c384828501610823565b91505092915050565b6000602082840312156108de57600080fd5b60006108ec8482850161084d565b91505092915050565b60006109018383610a4f565b905092915050565b61091281610cc1565b82525050565b61092181610cc1565b82525050565b600061093282610c37565b61093c8185610c5a565b93508360208202850161094e85610c27565b8060005b8581101561098a578484038952815161096b85826108f5565b945061097683610c4d565b925060208a01995050600181019050610952565b50829750879550505050505092915050565b6109a581610d09565b82525050565b6109b481610d2d565b82525050565b60006109c582610c42565b6109cf8185610c6b565b93506109df818560208601610d4e565b6109e881610e71565b840191505092915050565b60006109fe82610c42565b610a088185610c7c565b9350610a18818560208601610d4e565b610a2181610e71565b840191505092915050565b6000610a39601283610c7c565b9150610a4482610e82565b602082019050919050565b6000604083016000830151610a676000860182610909565b5060208301518482036020860152610a7f82826109ba565b9150508091505092915050565b6000604083016000830151610aa46000860182610909565b5060208301518482036020860152610abc82826109ba565b9150508091505092915050565b6000602082019050610ade6000830184610918565b92915050565b6000606082019050610af96000830186610918565b610b066020830185610918565b610b1360408301846109ab565b949350505050565b60006020820190508181036000830152610b358184610927565b905092915050565b6000602082019050610b52600083018461099c565b92915050565b60006040820190508181036000830152610b7281856109f3565b90508181036020830152610b8681846109f3565b90509392505050565b60006020820190508181036000830152610ba881610a2c565b9050919050565b60006020820190508181036000830152610bc98184610a8c565b905092915050565b6000610bdb610bec565b9050610be78282610db3565b919050565b6000604051905090565b600067ffffffffffffffff821115610c1157610c10610e42565b5b610c1a82610e71565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610c9882610cff565b9150610ca383610cff565b925082821015610cb657610cb5610de4565b5b828203905092915050565b6000610ccc82610cdf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d1482610d1b565b9050919050565b6000610d2682610cdf565b9050919050565b6000610d3882610cff565b9050919050565b82818337600083830152505050565b60005b83811015610d6c578082015181840152602081019050610d51565b83811115610d7b576000848401525b50505050565b60006002820490506001821680610d9957607f821691505b60208210811415610dad57610dac610e13565b5b50919050565b610dbc82610e71565b810181811067ffffffffffffffff82111715610ddb57610dda610e42565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b610eb481610cd3565b8114610ebf57600080fd5b50565b610ecb81610cff565b8114610ed657600080fd5b5056fe416464696e67206e6577206d657373616765206d657373616765202d2027257327a2646970667358221220a5a8d9ac931652e309557b585aa7a2574034b29ccff7d4970c116284764db2f564736f6c634300080400334465706c6f79696e67206120436861747465722077697468206d6573736167653a";

export class Chatter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _message: string,
    _sptAddr: string,
    _deployersAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chatter> {
    return super.deploy(
      _message,
      _sptAddr,
      _deployersAddr,
      overrides || {}
    ) as Promise<Chatter>;
  }
  getDeployTransaction(
    _message: string,
    _sptAddr: string,
    _deployersAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _message,
      _sptAddr,
      _deployersAddr,
      overrides || {}
    );
  }
  attach(address: string): Chatter {
    return super.attach(address) as Chatter;
  }
  connect(signer: Signer): Chatter__factory {
    return super.connect(signer) as Chatter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatterInterface {
    return new utils.Interface(_abi) as ChatterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Chatter {
    return new Contract(address, _abi, signerOrProvider) as Chatter;
  }
}
