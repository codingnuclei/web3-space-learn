/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Chatter, ChatterInterface } from '../Chatter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_message',
        type: 'string'
      },
      {
        internalType: 'address',
        name: '_sptAddr',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_deployersAddr',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'SPT',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_meesage',
        type: 'string'
      }
    ],
    name: 'addMessage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'allMessages',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address'
          },
          {
            internalType: 'string',
            name: 'message',
            type: 'string'
          }
        ],
        internalType: 'struct ChatMessage[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'latestMessage',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address'
          },
          {
            internalType: 'string',
            name: 'message',
            type: 'string'
          }
        ],
        internalType: 'struct ChatMessage',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b50604051620015ed380380620015ed8339818101604052810190620000379190620003ae565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000df604051806060016040528060218152602001620015cc6021913984620001a660201b620006551760201c565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906200019a92919062000275565b50505050505062000673565b620002488282604051602401620001bf9291906200045e565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200024c60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805462000283906200057e565b90600052602060002090601f016020900481019282620002a75760008555620002f3565b82601f10620002c257805160ff1916838001178555620002f3565b82800160010185558215620002f3579182015b82811115620002f2578251825591602001919060010190620002d5565b5b50905062000302919062000306565b5090565b5b808211156200032157600081600090555060010162000307565b5090565b60006200033c6200033684620004c2565b62000499565b9050828152602081018484840111156200035557600080fd5b6200036284828562000548565b509392505050565b6000815190506200037b8162000659565b92915050565b600082601f8301126200039357600080fd5b8151620003a584826020860162000325565b91505092915050565b600080600060608486031215620003c457600080fd5b600084015167ffffffffffffffff811115620003df57600080fd5b620003ed8682870162000381565b935050602062000400868287016200036a565b925050604062000413868287016200036a565b9150509250925092565b60006200042a82620004f8565b62000436818562000503565b93506200044881856020860162000548565b620004538162000648565b840191505092915050565b600060408201905081810360008301526200047a81856200041d565b905081810360208301526200049081846200041d565b90509392505050565b6000620004a5620004b8565b9050620004b38282620005b4565b919050565b6000604051905090565b600067ffffffffffffffff821115620004e057620004df62000619565b5b620004eb8262000648565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000620005218262000528565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620005685780820151818401526020810190506200054b565b8381111562000578576000848401525b50505050565b600060028204905060018216806200059757607f821691505b60208210811415620005ae57620005ad620005ea565b5b50919050565b620005bf8262000648565b810181811067ffffffffffffffff82111715620005e157620005e062000619565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620006648162000514565b81146200067057600080fd5b50565b60805160601c610f2c620006a0600039600081816103720152818161045b01526106330152610f2c6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806310a7fef91461005157806334a077981461006f5780636a226a491461008d578063affa8d81146100a9575b600080fd5b6100596100c7565b6040516100669190610b38565b60405180910390f35b61007761020e565b6040516100849190610bcc565b60405180910390f35b6100a760048036038101906100a291906108a8565b610367565b005b6100b1610631565b6040516100be9190610b5a565b60405180910390f35b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561020557838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461017490610d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546101a090610d9e565b80156101ed5780601f106101c2576101008083540402835291602001916101ed565b820191906000526020600020905b8154815290600101906020018083116101d057829003601f168201915b505050505081525050815260200190600101906100eb565b50505050905090565b61021661071a565b6000600160008054905061022a9190610caa565b81548110610261577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546102e090610d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610d9e565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b505050505081525050905090565b670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103c99190610ae6565b60206040518083038186803b1580156103e157600080fd5b505afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041991906108e9565b11610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610bac565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006040518463ffffffff1660e01b81526004016104e093929190610b01565b602060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610532919061087f565b506105726040518060400160405280601f81526020017f416464696e67206e6577206368617465206d657373616765202d20272573270081525082610655565b600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061062b92919061074a565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106ed828260405160240161066b929190610b75565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106f1565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b82805461075690610d9e565b90600052602060002090601f01602090048101928261077857600085556107bf565b82601f1061079157805160ff19168380011785556107bf565b828001600101855582156107bf579182015b828111156107be5782518255916020019190600101906107a3565b5b5090506107cc91906107d0565b5090565b5b808211156107e95760008160009055506001016107d1565b5090565b60006108006107fb84610c13565b610bee565b90508281526020810184848401111561081857600080fd5b610823848285610d5c565b509392505050565b60008151905061083a81610ec8565b92915050565b600082601f83011261085157600080fd5b81356108618482602086016107ed565b91505092915050565b60008151905061087981610edf565b92915050565b60006020828403121561089157600080fd5b600061089f8482850161082b565b91505092915050565b6000602082840312156108ba57600080fd5b600082013567ffffffffffffffff8111156108d457600080fd5b6108e084828501610840565b91505092915050565b6000602082840312156108fb57600080fd5b60006109098482850161086a565b91505092915050565b600061091e8383610a6c565b905092915050565b61092f81610cde565b82525050565b61093e81610cde565b82525050565b600061094f82610c54565b6109598185610c77565b93508360208202850161096b85610c44565b8060005b858110156109a757848403895281516109888582610912565b945061099383610c6a565b925060208a0199505060018101905061096f565b50829750879550505050505092915050565b6109c281610d26565b82525050565b6109d181610d4a565b82525050565b60006109e282610c5f565b6109ec8185610c88565b93506109fc818560208601610d6b565b610a0581610e8e565b840191505092915050565b6000610a1b82610c5f565b610a258185610c99565b9350610a35818560208601610d6b565b610a3e81610e8e565b840191505092915050565b6000610a56601283610c99565b9150610a6182610e9f565b602082019050919050565b6000604083016000830151610a846000860182610926565b5060208301518482036020860152610a9c82826109d7565b9150508091505092915050565b6000604083016000830151610ac16000860182610926565b5060208301518482036020860152610ad982826109d7565b9150508091505092915050565b6000602082019050610afb6000830184610935565b92915050565b6000606082019050610b166000830186610935565b610b236020830185610935565b610b3060408301846109c8565b949350505050565b60006020820190508181036000830152610b528184610944565b905092915050565b6000602082019050610b6f60008301846109b9565b92915050565b60006040820190508181036000830152610b8f8185610a10565b90508181036020830152610ba38184610a10565b90509392505050565b60006020820190508181036000830152610bc581610a49565b9050919050565b60006020820190508181036000830152610be68184610aa9565b905092915050565b6000610bf8610c09565b9050610c048282610dd0565b919050565b6000604051905090565b600067ffffffffffffffff821115610c2e57610c2d610e5f565b5b610c3782610e8e565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610cb582610d1c565b9150610cc083610d1c565b925082821015610cd357610cd2610e01565b5b828203905092915050565b6000610ce982610cfc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d3182610d38565b9050919050565b6000610d4382610cfc565b9050919050565b6000610d5582610d1c565b9050919050565b82818337600083830152505050565b60005b83811015610d89578082015181840152602081019050610d6e565b83811115610d98576000848401525b50505050565b60006002820490506001821680610db657607f821691505b60208210811415610dca57610dc9610e30565b5b50919050565b610dd982610e8e565b810181811067ffffffffffffffff82111715610df857610df7610e5f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b610ed181610cf0565b8114610edc57600080fd5b50565b610ee881610d1c565b8114610ef357600080fd5b5056fea2646970667358221220703ad281cc596874e22fb0535d5473feaeb3d017390c7cd12638dfc4fd1dc33264736f6c634300080400334465706c6f79696e67206120436861747465722077697468206d6573736167653a';

export class Chatter__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _message: string,
    _sptAddr: string,
    _deployersAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chatter> {
    return super.deploy(_message, _sptAddr, _deployersAddr, overrides || {}) as Promise<Chatter>;
  }
  getDeployTransaction(
    _message: string,
    _sptAddr: string,
    _deployersAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_message, _sptAddr, _deployersAddr, overrides || {});
  }
  attach(address: string): Chatter {
    return super.attach(address) as Chatter;
  }
  connect(signer: Signer): Chatter__factory {
    return super.connect(signer) as Chatter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatterInterface {
    return new utils.Interface(_abi) as ChatterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Chatter {
    return new Contract(address, _abi, signerOrProvider) as Chatter;
  }
}
